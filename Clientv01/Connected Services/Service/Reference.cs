//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clientv01.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IServiceUpdate")]
    public interface IServiceUpdate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUpdate/getFileinfo", ReplyAction="http://tempuri.org/IServiceUpdate/getFileinfoResponse")]
        string[] getFileinfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUpdate/getFileinfo", ReplyAction="http://tempuri.org/IServiceUpdate/getFileinfoResponse")]
        System.Threading.Tasks.Task<string[]> getFileinfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUpdate/getFile", ReplyAction="http://tempuri.org/IServiceUpdate/getFileResponse")]
        System.IO.Stream getFile(string way);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUpdate/getFile", ReplyAction="http://tempuri.org/IServiceUpdate/getFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> getFileAsync(string way);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUpdate/LenghtFile", ReplyAction="http://tempuri.org/IServiceUpdate/LenghtFileResponse")]
        int LenghtFile(string way);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUpdate/LenghtFile", ReplyAction="http://tempuri.org/IServiceUpdate/LenghtFileResponse")]
        System.Threading.Tasks.Task<int> LenghtFileAsync(string way);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUpdateChannel : Clientv01.Service.IServiceUpdate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUpdateClient : System.ServiceModel.ClientBase<Clientv01.Service.IServiceUpdate>, Clientv01.Service.IServiceUpdate {
        
        public ServiceUpdateClient() {
        }
        
        public ServiceUpdateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUpdateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUpdateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUpdateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] getFileinfo() {
            return base.Channel.getFileinfo();
        }
        
        public System.Threading.Tasks.Task<string[]> getFileinfoAsync() {
            return base.Channel.getFileinfoAsync();
        }
        
        public System.IO.Stream getFile(string way) {
            return base.Channel.getFile(way);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> getFileAsync(string way) {
            return base.Channel.getFileAsync(way);
        }
        
        public int LenghtFile(string way) {
            return base.Channel.LenghtFile(way);
        }
        
        public System.Threading.Tasks.Task<int> LenghtFileAsync(string way) {
            return base.Channel.LenghtFileAsync(way);
        }
    }
}
